@model dotnetTest.Models.ProjectInfo
@{
    ViewData["Title"] = "Project Details";
}

<link rel="stylesheet" href="~/css/project-details.css" />

<div class="container">
    <div class="project-header">
        <h1>@Model.ProjectName</h1>
        <h3>Manager: @Model.ProjectManagerName</h3>
        <p class="project-description">@Model.ProjectDescription</p>
        <div class="team-members">
            @if (Model.Members?.Any() == true)
            {
                foreach (var member in Model.Members)
                {
                    <div class="member-item">
                        @if (!string.IsNullOrEmpty(member.ProfilePhotoUrl))
                        {
                            <img src="@member.ProfilePhotoUrl" alt="@member.MemberFirstName's photo" class="rounded-circle" />
            }
            else
            {
                            <i class="bi bi-person-circle" style="font-size: 1.5rem; color: #6c757d;"></i>
                        }
                        <span>@member.MemberFirstName @member.MemberLastName</span>
                    </div>
                }
            }
            <a href="@Url.Action("Search", "Project", new { projectId = Model.ProjectId })" class="createBtn">
                <i class="bi bi-plus-lg"></i> Add Member
            </a>
        </div>
    </div>

    <div class="project-content">
        <div class="main-content">
            <!-- Tasks Section -->
            <div class="card">
                <div class="task-item">
                    <h3>Task Hours</h3>
                    @{
                        float totalHours = Model.Tasks?.Sum(t => t.EstimatedHours) ?? 0;
                    }
                    <h2>@totalHours</h2>
                </div>
                <div class="card-header">

                    <h3>Tasks</h3>
                    <a href="@Url.Action("AddTask", "Project", new { projectId = Model.ProjectId })" class="createBtn">
                        <i class="bi bi-plus-lg"></i> Add Task
                    </a>
                </div>
                <div class="task-list">
                    @if (Model.Tasks?.Any() == true)
                    {
                        foreach (var task in Model.Tasks.Where(t => t.TaskActive == true))
                        {
                            <div class="task-item">
                                <div>
                                    <h6 class="mb-1">@task.TaskDescription</h6>
                                    <small class="text-muted">Assigned to: @task.AssignedTo</small>
                                </div>
                                <span class="badge bg-primary">Due: @task.TaskDueDate.ToString()</span>
                            </div>
                        }
            }
            else
            {
                        <p class="text-muted">No tasks added yet.</p>
            }
        </div>
        </div>

            <!-- Requirements Section -->
            <div class="requirements-section">
                <div class="requirement-box">
                    <div class="card-header">
                        <h5>Functional Requirements</h5>
                    </div>
                    @if (Model.FunctionalRequirements?.Any() == true)
                    {
                        <ul class="list-group">
                            @foreach (var req in Model.FunctionalRequirements)
                            {
                                <li class="list-group-item">@req</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No functional requirements added yet.</p>
                    }
                </div>
                <div class="requirement-box">
                    <div class="card-header">
                        <h5>Non-Functional Requirements</h5>
                    </div>
                    @if (Model.NonFunctionalRequirements?.Any() == true)
                    {
                        <ul class="list-group">
                            @foreach (var req in Model.NonFunctionalRequirements)
                            {
                                <li class="list-group-item">@req</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No non-functional requirements added yet.</p>
                    }
                </div>
            </div>
            <a href="@Url.Action("AddRequirements", "Project", new { projectId = Model.ProjectId })" class="createBtn">
                @if (Model.FunctionalRequirements?.Any() == true || Model.NonFunctionalRequirements?.Any() == true)
                {
                    <span>Edit Requirements</span>
                }
                else
                {
                    <span>Add Requirements</span>
                }
            </a>
        </div>

        <div class="sidebar">
            <!-- Stats Section -->
            <div class="stats-grid">
                
                <div class="stat-box effort-tracking">
                    <h3>Effort Distribution</h3>
                    <div class="hours-list">
                        <div class="hours-item">
                            <span>Project Management</span>
                            <strong>@Model.ProjectManagementHours hrs</strong>
                        </div>
                        <div class="hours-item">
                            <span>Requirements Analysis</span>
                            <strong>@Model.RequirementAnalysisHours hrs</strong>
                        </div>
                        <div class="hours-item">
                            <span>Design</span>
                            <strong>@Model.DesignHours hrs</strong>
                        </div>
                        <div class="hours-item">
                            <span>Coding</span>
                            <strong>@Model.CodingHours hrs</strong>
                        </div>
                        <div class="hours-item">
                            <span>Testing</span>
                            <strong>@Model.TestingHours hrs</strong>
                        </div>
                        <div class="hours-total">
                            <span>Total Effort</span>
                            <strong>@(Model.ProjectManagementHours + Model.RequirementAnalysisHours + Model.DesignHours + Model.CodingHours + Model.TestingHours) hrs</strong>
                        </div>
                    </div>
                    <a href="@Url.Action("EffortTracking", "Project", new { projectId = Model.ProjectId })" class="createBtn mt-3">
                        Update Hours
                    </a>
                </div>
            </div>

            <!-- Risks Section -->
            <div class="card mt-4">
                <div class="card-header">
                    <h3>Risks</h3>
                    <a href="@Url.Action("AddRisk", "Project", new { projectId = Model.ProjectId })" class="createBtn">
                        <i class="bi bi-plus-lg"></i> Add Risk
                    </a>
                </div>
                @if (Model.Risks?.Any() == true)
                {
                    foreach (var risk in Model.Risks)
                    {
                        <div class="risk-item">
                            <span>@risk.RiskDescription</span>
                            <span class="badge @(risk.RiskStatus == 3 ? "bg-danger" : risk.RiskStatus == 2 ? "bg-warning" : "bg-success")">
                                @(risk.RiskStatus == 3 ? "High" : risk.RiskStatus == 2 ? "Medium" : "Low")
                            </span>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No risks identified yet.</p>
                }
            </div>
        </div>
    </div>
</div>