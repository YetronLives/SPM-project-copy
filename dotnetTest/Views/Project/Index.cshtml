@model List<ProjectInfo>
@{
    ViewData["Title"] = "My Projects";
}
<script>document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".card").forEach(function (card) {
            card.addEventListener("click", function (e) {
                if (!e.target.closest("a")) {
                    const href = card.getAttribute("data-href");
                    if (href) {
                        window.location.href = href;
                    }
                }
            });
        });
    });</script>

<div class="text-center mb-4">
    <div class="profile-photo-container">
        @if (!string.IsNullOrEmpty(ViewBag.ProfilePhotoUrl))
        {
            <img src="@ViewBag.ProfilePhotoUrl" alt="Profile Photo" class="profile-photo rounded-circle" />
        }
        else
        {
            <div class="profile-photo-placeholder rounded-circle">
                <i class="bi bi-person-circle" style="font-size: 5rem; color: #6c757d;"></i>
            </div>
        }
    </div>
    <h2 class="welcome mt-3">@User.Identity.Name's Projects</h2>
</div>

<div class="text-center mt-4">
    <a class="createBtn" href="@Url.Action("Create", "Project")">New Project</a>
</div>

<div>
    @foreach (var user in Model)
    {
        <div class="container">
            <div class="card" data-href="@Url.Action("ProjectDetails", "Project", new { id = user.ProjectId })">
                <div class="card-header">
                    <h3><a class="proj" href="@Url.Action("ProjectDetails", "Project", new { id = user.ProjectId })">@user.ProjectName</a></h3>
                </div>
                <label>Project Manager</label>
                <div class="card-body">
                    <h6>@user.ProjectManagerName</h6>
                </div>
                <hr class="dash">
                <label>Project Description</label>
                <div class="card-body">
                    <p>@user.ProjectDescription</p>
                </div>
                <hr class="dash">
                <label>Requirements</label>
                <div class="card-body">
                    @if (user.FunctionalRequirements?.Any() == true || user.NonFunctionalRequirements?.Any() == true)
                    {
                        @if (user.FunctionalRequirements?.Any() == true)
                        {
                            <h6 class="mb-3">Functional Requirements:</h6>
                            <ul class="list-unstyled">
                                @foreach (var req in user.FunctionalRequirements)
                                {
                                    <li>• @req</li>
                                }
                            </ul>
                        }
                        @if (user.NonFunctionalRequirements?.Any() == true)
                        {
                            <h6 class="mb-3">Non-Functional Requirements:</h6>
                            <ul class="list-unstyled">
                                @foreach (var req in user.NonFunctionalRequirements)
                                {
                                    <li>• @req</li>
                                }
                            </ul>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No requirements added yet.</p>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.Action("AddRequirements", "Project", new { projectId = user.ProjectId })" class="createBtn">
                        @if (user.FunctionalRequirements?.Any() == true || user.NonFunctionalRequirements?.Any() == true)
                        {
                            <span>Edit Requirements</span>
                        }
                        else
                        {
                            <span>Add Requirements</span>
                        }
                    </a>
                </div>
                <hr class="dash">
                <label for="">Effort Tracking</label>
                <div class="card-body">
                    <span>Project Management: @user.ProjectManagementHours hours</span> 
                </div>
                <div class="card-body">
                    <span>Requirement Analysis: @user.RequirementAnalysisHours hours</span>
                </div>
                <div class="card-body">
                    <span>Design: @user.DesignHours hours</span>
                </div>
                <div class="card-body">
                    <span>Coding : @user.CodingHours hours</span>
                </div>
                <div class="card-body">
                    <span>Testing: @user.TestingHours hours</span>
                </div>
                <div class="text-center mt-4">
                    <a class="createBtn" href="@Url.Action("EffortTracking", "Project", new { projectId = user.ProjectId })">Track Hours</a>
                </div>
                <hr class="dash">
                <label>Tasks</label>
                <div class="card-body">
                    @if (user.Tasks?.Any() == true)
                    {
                        @foreach (var task in @user.Tasks)
                        {
                            <li>@task.TaskDescription - Due: @task.TaskDueDate</li>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No Tasks added yet.</p>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.Action("AddTask", "Project", new { projectId = user.ProjectId })" class="createBtn">Add Task</a>
                </div>
                <hr class="dash">
                <label>Risks</label>
                <div class="card-body">
                    @if (user.Risks?.Any() == true)
                    {
                        <ul class="list-unstyled">
                            @foreach (var risk in user.Risks)
                            {
                                <li>
                                    • @risk.RiskDescription
                                    <span class="badge @(risk.RiskStatus == 3 ? "bg-danger" : risk.RiskStatus == 2 ? "bg-warning" : "bg-success")">
                                        @(risk.RiskStatus == 3 ? "High" : risk.RiskStatus == 2 ? "Medium" : "Low")
                                    </span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No risks identified yet.</p>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.Action("AddRisk", "Project", new { projectId = user.ProjectId })" class="createBtn">Add Risk</a>
                </div>
                <hr class="dash">
                <label>Team Members</label>
                <div class="card-body">
                    @if (user.Members?.Any() == true)
                    {
                        @foreach (var member in @user.Members)
                        {
                            <li>@member.MemberFirstName @member.MemberLastName</li>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No Members added yet.</p>
                    }
                </div>
                <div class="card-body">
                    <a href="@Url.Action("Search", "Project", new { projectId = user.ProjectId })" class="createBtn">Add Member</a>
                </div>
                <div class="card-body">
                    <a href="@Url.Action("Delete", "Project", new { projectId = user.ProjectId })" class="createBtn">Delete</a>
                </div>
            </div>
        </div>
    }
</div>


